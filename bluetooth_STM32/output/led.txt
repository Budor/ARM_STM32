; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\led.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\led.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\user -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\Libraries\CMSIS\CM3\CoreSupport -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\APP\LED -I.\APP\SysTick -I.\APP\beep -I.\APP\key -I.\APP\usart -I.\APP\printf -I.\APP\HC05 -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\output\led.crf APP\LED\led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  delay PROC
;;;8      *******************************************************************************/
;;;9      void delay(u32 i)
000000  bf00              NOP      
                  |L1.2|
;;;10     {
;;;11     	while(i--);
000002  0001              MOVS     r1,r0
000004  f1a00001          SUB      r0,r0,#1
000008  d1fb              BNE      |L1.2|
;;;12     }
00000a  4770              BX       lr
;;;13     
                          ENDP

                  LED_Init PROC
;;;19     *******************************************************************************/
;;;20     void LED_Init()	  //端口初始化
00000c  b508              PUSH     {r3,lr}
;;;21     {
;;;22     	GPIO_InitTypeDef GPIO_InitStructure;	//声明一个结构体变量，用来初始化GPIO
;;;23     
;;;24     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC,ENABLE); /* 开启GPIO时钟 */
00000e  2101              MOVS     r1,#1
000010  2010              MOVS     r0,#0x10
000012  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;25     
;;;26     	/*  配置GPIO的模式和IO口 */
;;;27     	GPIO_InitStructure.GPIO_Pin=LED;	 //选择你要设置的IO口
000016  f44f6080          MOV      r0,#0x400
00001a  f8ad0000          STRH     r0,[sp,#0]
;;;28     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;	  //设置推挽输出模式
00001e  2010              MOVS     r0,#0x10
000020  f88d0003          STRB     r0,[sp,#3]
;;;29     	GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;	  //设置传输速率
000024  2003              MOVS     r0,#3
000026  f88d0002          STRB     r0,[sp,#2]
;;;30     	GPIO_Init(GPIOC,&GPIO_InitStructure); /* 初始化GPIO */	
00002a  4669              MOV      r1,sp
00002c  480a              LDR      r0,|L1.88|
00002e  f7fffffe          BL       GPIO_Init
;;;31     }
000032  bd08              POP      {r3,pc}
;;;32     
                          ENDP

                  led_display PROC
;;;38     *******************************************************************************/
;;;39     void led_display()	//LED闪烁
000034  b510              PUSH     {r4,lr}
;;;40     {
;;;41     	GPIO_SetBits(GPIOC,LED);	 //IO口输出高电平
000036  f44f6180          MOV      r1,#0x400
00003a  4807              LDR      r0,|L1.88|
00003c  f7fffffe          BL       GPIO_SetBits
;;;42     	delay(6000000);//延时约为1s
000040  4806              LDR      r0,|L1.92|
000042  f7fffffe          BL       delay
;;;43     	GPIO_ResetBits(GPIOC,LED); //IO口输出低电平
000046  f44f6180          MOV      r1,#0x400
00004a  4803              LDR      r0,|L1.88|
00004c  f7fffffe          BL       GPIO_ResetBits
;;;44     	delay(6000000);
000050  4802              LDR      r0,|L1.92|
000052  f7fffffe          BL       delay
;;;45     }
000056  bd10              POP      {r4,pc}
                          ENDP

                  |L1.88|
                          DCD      0x40011000
                  |L1.92|
                          DCD      0x005b8d80
