; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\key.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\key.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\user -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\Libraries\CMSIS\CM3\CoreSupport -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\APP\LED -I.\APP\SysTick -I.\APP\beep -I.\APP\key -I.\APP\usart -I.\APP\printf -I.\APP\HC05 -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\output\key.crf APP\key\key.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  key_init PROC
;;;8      *******************************************************************************/
;;;9      void key_init()	   //
000000  b508              PUSH     {r3,lr}
;;;10     {
;;;11     	GPIO_InitTypeDef GPIO_InitStructure;	  //声明一个结构体变量，用来初始化GPIO
;;;12     
;;;13     	/* 开启GPIO时钟 */
;;;14     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOE,ENABLE);
000002  2101              MOVS     r1,#1
000004  2044              MOVS     r0,#0x44
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;15     
;;;16     	/*  配置GPIO的模式和IO口 */
;;;17     	GPIO_InitStructure.GPIO_Pin=K_UP;	   //选择你要设置的IO口
00000a  2001              MOVS     r0,#1
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;18     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IPU;//上拉输入  
000010  2048              MOVS     r0,#0x48
000012  f88d0003          STRB     r0,[sp,#3]
;;;19     	GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;	   //设置传输速率
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;20     	GPIO_Init(GPIOA,&GPIO_InitStructure);		  /* 初始化GPIO */
00001c  4669              MOV      r1,sp
00001e  480a              LDR      r0,|L1.72|
000020  f7fffffe          BL       GPIO_Init
;;;21     	
;;;22     	GPIO_InitStructure.GPIO_Pin=K_DOWN|K_LEFT|K_RIGHT;
000024  201c              MOVS     r0,#0x1c
000026  f8ad0000          STRH     r0,[sp,#0]
;;;23     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IPU;	//上拉输入
00002a  2048              MOVS     r0,#0x48
00002c  f88d0003          STRB     r0,[sp,#3]
;;;24     	GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;
000030  2003              MOVS     r0,#3
000032  f88d0002          STRB     r0,[sp,#2]
;;;25     	GPIO_Init(GPIOE,&GPIO_InitStructure);
000036  4669              MOV      r1,sp
000038  4804              LDR      r0,|L1.76|
00003a  f7fffffe          BL       GPIO_Init
;;;26     				
;;;27     	GPIO_ResetBits(GPIOA,K_UP);	//对K_UP初始化输出0
00003e  2101              MOVS     r1,#1
000040  4801              LDR      r0,|L1.72|
000042  f7fffffe          BL       GPIO_ResetBits
;;;28     }
000046  bd08              POP      {r3,pc}
                          ENDP

                  |L1.72|
                          DCD      0x40010800
                  |L1.76|
                          DCD      0x40011800
