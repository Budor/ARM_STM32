; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\printf.o --asm_dir=.\output\ --list_dir=.\output\ --depend=.\output\printf.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\user -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\Libraries\CMSIS\CM3\CoreSupport -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\APP\LED -I.\APP\SysTick -I.\APP\beep -I.\APP\key -I.\APP\usart -I.\APP\printf -I.\APP\HC05 -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\output\printf.crf APP\printf\printf.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;3      
;;;4      int fputc(int ch,FILE *p)  //函数默认的，在使用printf函数时自动调用
000000  b570              PUSH     {r4-r6,lr}
;;;5      {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;6      	USART_SendData(USART1,(u8)ch);	
000006  b2e1              UXTB     r1,r4
000008  4830              LDR      r0,|L1.204|
00000a  f7fffffe          BL       USART_SendData
;;;7      	while(USART_GetFlagStatus(USART1,USART_FLAG_TXE)==RESET);
00000e  bf00              NOP      
                  |L1.16|
000010  2180              MOVS     r1,#0x80
000012  482e              LDR      r0,|L1.204|
000014  f7fffffe          BL       USART_GetFlagStatus
000018  2800              CMP      r0,#0
00001a  d0f9              BEQ      |L1.16|
;;;8      	return ch;
00001c  4620              MOV      r0,r4
;;;9      }
00001e  bd70              POP      {r4-r6,pc}
;;;10     
                          ENDP

                  printf_init PROC
;;;16     *******************************************************************************/
;;;17     void printf_init()	//printf初始化
000020  b500              PUSH     {lr}
;;;18     {
000022  b087              SUB      sp,sp,#0x1c
;;;19     	GPIO_InitTypeDef GPIO_InitStructure;	//声明一个结构体变量，用来初始化GPIO
;;;20     	NVIC_InitTypeDef NVIC_InitStructure;	 //中断结构体定义
;;;21     	USART_InitTypeDef  USART_InitStructure;	  //串口结构体定义
;;;22     
;;;23     	RCC_APB2PeriphClockCmd(  RCC_APB2Periph_GPIOA
000024  2101              MOVS     r1,#1
000026  f2440005          MOV      r0,#0x4005
00002a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;24                                 |RCC_APB2Periph_USART1
;;;25                                 |RCC_APB2Periph_AFIO,ENABLE
;;;26                                );
;;;27     
;;;28     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_9;//TX
00002e  f44f7000          MOV      r0,#0x200
000032  f8ad0018          STRH     r0,[sp,#0x18]
;;;29     	GPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;
000036  2003              MOVS     r0,#3
000038  f88d001a          STRB     r0,[sp,#0x1a]
;;;30     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP;
00003c  2018              MOVS     r0,#0x18
00003e  f88d001b          STRB     r0,[sp,#0x1b]
;;;31     	GPIO_Init(GPIOA,&GPIO_InitStructure);
000042  a906              ADD      r1,sp,#0x18
000044  4822              LDR      r0,|L1.208|
000046  f7fffffe          BL       GPIO_Init
;;;32         
;;;33     	GPIO_InitStructure.GPIO_Pin=GPIO_Pin_10;//RX
00004a  f44f6080          MOV      r0,#0x400
00004e  f8ad0018          STRH     r0,[sp,#0x18]
;;;34     	GPIO_InitStructure.GPIO_Mode=GPIO_Mode_IN_FLOATING;
000052  2004              MOVS     r0,#4
000054  f88d001b          STRB     r0,[sp,#0x1b]
;;;35     	GPIO_Init(GPIOA,&GPIO_InitStructure);
000058  a906              ADD      r1,sp,#0x18
00005a  481d              LDR      r0,|L1.208|
00005c  f7fffffe          BL       GPIO_Init
;;;36      
;;;37     
;;;38     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1); 
000060  f44f60c0          MOV      r0,#0x600
000064  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;39     	NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn; 
000068  2025              MOVS     r0,#0x25
00006a  f88d0014          STRB     r0,[sp,#0x14]
;;;40     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0; 
00006e  2000              MOVS     r0,#0
000070  f88d0015          STRB     r0,[sp,#0x15]
;;;41     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1; 
000074  2001              MOVS     r0,#1
000076  f88d0016          STRB     r0,[sp,#0x16]
;;;42     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE; 
00007a  f88d0017          STRB     r0,[sp,#0x17]
;;;43     	NVIC_Init(&NVIC_InitStructure);
00007e  a805              ADD      r0,sp,#0x14
000080  f7fffffe          BL       NVIC_Init
;;;44     
;;;45     
;;;46     	USART_InitStructure.USART_BaudRate=9600;   //波特率设置为9600
000084  f44f5016          MOV      r0,#0x2580
000088  9001              STR      r0,[sp,#4]
;;;47     	USART_InitStructure.USART_WordLength=USART_WordLength_8b;
00008a  2000              MOVS     r0,#0
00008c  f8ad0008          STRH     r0,[sp,#8]
;;;48     	USART_InitStructure.USART_StopBits=USART_StopBits_1;
000090  f8ad000a          STRH     r0,[sp,#0xa]
;;;49     	USART_InitStructure.USART_Parity=USART_Parity_No;
000094  f8ad000c          STRH     r0,[sp,#0xc]
;;;50     	USART_InitStructure.USART_HardwareFlowControl=USART_HardwareFlowControl_None;
000098  f8ad0010          STRH     r0,[sp,#0x10]
;;;51     	USART_InitStructure.USART_Mode=USART_Mode_Rx|USART_Mode_Tx;
00009c  200c              MOVS     r0,#0xc
00009e  f8ad000e          STRH     r0,[sp,#0xe]
;;;52     	USART_Init(USART1,&USART_InitStructure);
0000a2  a901              ADD      r1,sp,#4
0000a4  4809              LDR      r0,|L1.204|
0000a6  f7fffffe          BL       USART_Init
;;;53     	USART_Cmd(USART1, ENABLE);
0000aa  2101              MOVS     r1,#1
0000ac  4807              LDR      r0,|L1.204|
0000ae  f7fffffe          BL       USART_Cmd
;;;54     	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);//使能或者失能指定的USART中断 接收中断
0000b2  2201              MOVS     r2,#1
0000b4  f2405125          MOV      r1,#0x525
0000b8  4804              LDR      r0,|L1.204|
0000ba  f7fffffe          BL       USART_ITConfig
;;;55     	USART_ClearFlag(USART1,USART_FLAG_TC);//清除USARTx的待处理标志位
0000be  2140              MOVS     r1,#0x40
0000c0  4802              LDR      r0,|L1.204|
0000c2  f7fffffe          BL       USART_ClearFlag
;;;56     }
0000c6  b007              ADD      sp,sp,#0x1c
0000c8  bd00              POP      {pc}
                          ENDP

0000ca  0000              DCW      0x0000
                  |L1.204|
                          DCD      0x40013800
                  |L1.208|
                          DCD      0x40010800
